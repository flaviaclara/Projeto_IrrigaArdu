#include <WiFi.h>
#include <PubSubClient.h>

const char* ssid = "Wokwi-GUEST";
const char* password = "";
const char* mqttServer = "test.mosquitto.org";
int mqttPort = 1883;

WiFiClient espClient;
PubSubClient client(espClient);

#define SENSOR_PIN 34
#define BOMBA_PIN 2
#define UMIDADE_MINIMA 50

void setup_wifi() {
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
}

void callback(char* topic, byte* message, unsigned int length) {
  String msg;
  for (int i = 0; i < length; i++) {
    msg += (char)message[i];
  }

  if (String(topic) == "irrigacao/ligar_bomba") {
    digitalWrite(BOMBA_PIN, msg == "1" ? HIGH : LOW);
  }
}

void reconnect() {
  while (!client.connected()) {
    if (client.connect("esp32-irrigacao")) {
      client.subscribe("irrigacao/ligar_bomba");
    } else {
      delay(2000);
    }
  }
}

void setup() {
  pinMode(BOMBA_PIN, OUTPUT);
  digitalWrite(BOMBA_PIN, LOW);

  setup_wifi();
  client.setServer(mqttServer, mqttPort);
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  int valorSensor = analogRead(SENSOR_PIN);
  int umidade = map(valorSensor, 0, 4095, 100, 0); // inverte

  String payload = String(umidade);
  client.publish("irrigacao/umidade", payload.c_str());

  if (umidade < UMIDADE_MINIMA) {
    digitalWrite(BOMBA_PIN, HIGH);
  } else {
    digitalWrite(BOMBA_PIN, LOW);
  }

  delay(2000);
}